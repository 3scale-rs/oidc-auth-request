version_info: 0,
resources:
  - "@type": type.googleapis.com/envoy.config.listener.v3.Listener
    name: web_listener
    address:
      socket_address:
        address: "0.0.0.0"
        port_value: 80
    filter_chains:
      - filters:
          - name: envoy.http_connection_manager
            typed_config:
              "@type": type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager
              codec_type: auto
              stat_prefix: ingress_http
              access_log:
                - name: envoy.file_access_log
                  typed_config:
                    "@type": type.googleapis.com/envoy.extensions.access_loggers.file.v3.FileAccessLog
                    path: "/dev/stdout"
              route_config:
                name: local_route
                virtual_hosts:
                  - name: web_backend
                    domains:
                      - web
                      - web.app
                      - "*"
                    routes:
                      - match:
                          prefix: "/"
                        #redirect:
                        #  path_redirect: "/"
                        #  https_redirect: true
                        route:
                          cluster: web
              http_filters:
                - name: envoy.filters.http.wasm
                  typed_config:
                    #"@type": type.googleapis.com/udpa.type.v1.TypedStruct
                    "@type": type.googleapis.com/envoy.extensions.filters.http.wasm.v3.Wasm
                    config:
                      name: oidc-auth-request
                      root_id: "oidc_auth_request_root_id"
                      vm_config:
                        vm_id: "1"
                        runtime: envoy.wasm.runtime.v8
                        configuration:
                          "@type": type.googleapis.com/google.protobuf.StringValue
                          value: "vm configuration here!"
                        code:
                          local:
                            filename: "/etc/proxy-wasm/oidc_auth_request.wasm"
                        allow_precompiled: false
                      configuration:
                        "@type": type.googleapis.com/google.protobuf.StringValue
                        value: |
                          {
                            "oidcs": [
                              {
                                "id": "keycloak",
                                "upstream": {
                                  "name": "keycloak",
                                  "url": "http://keycloak",
                                  "timeout": 5000
                                },
                                "urls": {
                                  "login": "http://0.0.0.0:18080/auth/realms/master/protocol/openid-connect/auth",
                                  "token": "http://0.0.0.0:18080/auth/realms/master/protocol/openid-connect/token"
                                },
                                "clients": [
                                  {
                                    "id": "test",
                                    "secret": "b1470c85-c57b-4f2c-91ce-f554e9fde3d6"
                                  }
                                ]
                              }
                            ],
                            "rules": [
                              {
                                "authorities": [
                                  "web",
                                  "web.app",
                                  "0.0.0.0:8080",
                                  "0.0.0.0:9080"
                                ],
                                "match": [
                                  {
                                    "prefix": "/oidc",
                                    "with": {
                                      "oidc": "keycloak",
                                      "client": "test"
                                    }
                                  }
                                ]
                              }
                            ]
                          }
                      fail_open: false
                - name: envoy.filters.http.jwt_authn
                  config:
                    providers:
                      oidc_provider:
                        issuer: http://keycloak/auth/realms/master
                        audiences:
                          - admin-cli
                        forward: true
                        remote_jwks:
                          http_uri:
                            uri: http://keycloak/auth/realms/master/protocol/openid-connect/certs
                            cluster: keycloak
                            timeout: 5s
                          cache_duration:
                            seconds: 300
                    rules:
                      - match { prefix: /oidc }
                        requires:
                          provider_name: oidc_provider
                    bypass_cors_preflight: true
                - name: envoy.filters.http.router
        tls_context:
          common_tls_context:
            tls_certificates:
              - certificate_chain:
                  filename: "/etc/envoy/certs/envoy.crt"
                private_key:
                  filename: "/etc/envoy/certs/envoy.key"
